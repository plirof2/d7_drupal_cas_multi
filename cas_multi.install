<?php

/**
 * Implements hook_schema().
 */
function cas_multi_schema() {
  $schema = array();

  $schema['cas_multi_user'] = array(
    'description' => 'Stores mappings of CAS usernames to Drupal usernames.',
    'fields' => array(
      'aid' => array(
        'description' => 'Primary Key: Unique authmap ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "User's {users}.uid.",
      ),
      'server_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => 'Unique name of the CAS server configuration.',
        'not null' => TRUE,
      ),
      'cas_name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'description' => 'Unique authentication name.',
      ),
    ),
    'primary key' => array('aid'),
    'unique keys' => array(
      'cas_name_per_server' => array('cas_name', 'server_name', 'uid'),
    ),
  );

  $schema['cas_multi_login_data'] = array(
    'description' => 'Stores an association between a user\'s Drupal session ID and their CAS session ID.',
    'fields' => array(
      'cas_session_id' => array(
        'description' => 'CAS session ID',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'drupal_session_id' => array(
        'description' => 'Drupal session ID',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.uid associated with the CAS session.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the login occured.',
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('cas_session_id'),
  );

  $schema['cas_multi_server'] = array(
    'description' => 'Stores configuration data about external CAS servers.',
    'export' => array(
      'key' => 'name',
      'key name' => 'Server Machine Name',
      'primary key' => 'sid',
      'identifier' => 'cas_multi_servers_conf',
      'admin_title' => 'label',
      'api' => array(
        'owner' => 'cas_multi',
        'api' => 'cas_multi',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      'sid' => array(
        'description' => 'Unique ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Unique machine name of the server.',
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Human readable lable of the server.',
      ),
      'hostname' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'port' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 443,
      ),
      'path' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'version' => array(
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
      ),
      'tls_cert_ca_path' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'auto_assigned_roles' => array(
        'type' => 'text',
      ),
      'auto_register' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'auto_register_domain' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'single_sign_out' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'login_link_enabled' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'login_link_label' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'login_link_description' => array(
        'type' => 'text',
      ),
      'login_success_message' => array(
        'type' => 'varchar',
        'length' => 255,
        'default' => 'Logged in via CAS as %cas_username.',
      ),
      'hide_email' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'hide_password' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('sid'),
    'unique keys' => array('name' => array('name')),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function cas_multi_uninstall() {
  variable_del('cas_multi_default_server_config_name');
  variable_del('cas_multi_library_dir');
  variable_get('cas_multi_user_registration_redirect');
  variable_del('cas_multi_forgot_password_redirect');
}

/**
 * Implements hook_requirements().
 */
function cas_multi_requirements($phase) {
  $requirements = array();
  $t = get_t();

  if ($phase == 'runtime') {
    $phpcas_url = 'https://wiki.jasig.org/display/CASC/phpCAS';

    $requirements['phpcas']['title'] = $t('phpCAS');
    // Okay to call functions from cas_multi.module since we are in the runtime
    // phase. We hide errors here in case phpcas could not be loaded.
    if ($version = @_cas_multi_load_phpcas_library()) {
      $requirements['phpcas']['value'] = $version;
      $requirements['phpcas']['severity'] = REQUIREMENT_INFO;
      $requirements['phpcas']['description'] = $t('Please check periodically for <a href="@phpcas_url">security updates</a> to phpCAS.', array('@phpcas_url' => $phpcas_url));
    }
    else {
      $requirements['phpcas']['value'] = $t('Not found');
      $requirements['phpcas']['severity'] = REQUIREMENT_ERROR;
      $requirements['phpcas']['description'] = $t('phpCAS could not be loaded. Please <a href="@phpcas_url">download phpCAS</a> and <a href="@cas_url">configure its location</a>.', array('@phpcas_url' => $phpcas_url, '@cas_url' => url(CAS_CONFIG_BASE_PATH . '/settings')));
    }
  }
  return $requirements;
}
